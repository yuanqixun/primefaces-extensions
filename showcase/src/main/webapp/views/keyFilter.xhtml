<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:pe="http://primefaces.org/ui/extensions">
<ui:composition template="/templates/showcaseLayout.xhtml">
    <ui:define name="centerContent">
        <f:facet name="header">
            <h:outputText value="KeyFilter"/>
        </f:facet>
        <h:panelGroup layout="block" styleClass="centerContent">
			KeyFilter can be used to filter keyboard input on specified input components.
        </h:panelGroup>

        <h:panelGroup layout="block" styleClass="centerExample">
			KeyFilter with mask on a p:inputText<br/>
			<p:inputText id="text1" required="true"/><br/><br/>
			
			KeyFilter with regEx on a h:inputText<br/>
			<h:inputText id="text2">
				<pe:keyFilter regEx="/[ABC]/i"/>
			</h:inputText><br/><br/>
			
			KeyFilter with testFunction on a p:autoComplete<br/>
            <p:autoComplete id="autoComplete1" value="#{autoCompleteController.text}"
            	 completeMethod="#{autoCompleteController.complete}"/><br/>

  			<pe:keyFilter for="text1" mask="num"/>
  			<pe:keyFilter for="autoComplete1" testFunction="return c == 'z';"/>
        </h:panelGroup>

        <ui:decorate template="/templates/twoTabsDecorator.html">
            <ui:define name="contentTab1">
KeyFilter with mask on a p:inputText
&lt;p:inputText id="text1" required="true"/&gt;

KeyFilter with regEx on a h:inputText
&lt;h:inputText id="text2"&gt;
	&lt;pe:keyFilter regEx="/[ABC]/i"/&gt;
&lt;/h:inputText&gt;

KeyFilter with testFunction on a p:autoComplete
&lt;p:autoComplete id="autoComplete1" value="\#{autoCompleteController.text}"
	completeMethod="\#{autoCompleteController.complete}"/&gt;

&lt;pe:keyFilter for="text1" mask="num"/&gt;
&lt;pe:keyFilter for="autoComplete1" testFunction="return c == 'z';"/&gt;
	            </ui:define>
            <ui:define name="contentTab2">
@ManagedBean
@RequestScoped
public class AutoCompleteController {

	private String text;

	public List&lt;String&gt; complete(final String query) {
		final List&lt;String&gt; results = new ArrayList&lt;String&gt;();

		for (int i = 0; i &lt; 10; i++) {
			results.add(query + i);
		}

		return results;
	}

	public final String getText() {
		return text;
	}

	public final void setText(String text) {
		this.text = text;
	}
}
            </ui:define>
        </ui:decorate>
    </ui:define>
    <ui:define name="useCases">
        
    </ui:define>
    <ui:define name="docuTable">
        <ui:include src="/sections/shared/documentation.xhtml">
            <ui:param name="tagName" value="keyFilter"/>
        </ui:include>
    </ui:define>
</ui:composition>
</html>

