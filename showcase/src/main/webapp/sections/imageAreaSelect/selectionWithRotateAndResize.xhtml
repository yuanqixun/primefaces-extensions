<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:pe="http://primefaces.org/ui/extensions">
<ui:composition template="/templates/showcaseLayout.xhtml">
    <ui:define name="centerContent">
        <f:facet name="header">
            <h:outputText value="ImageAreaSelect"/>
        </f:facet>
        <h:panelGroup layout="block" styleClass="centerContent">
            It's also possible to combine ImageAreaSelect and ImageRotateAndResize.<br/>
            Note:<br/>
            You need to update the ImageAreaSelect widget after resize or rotate.<br/>
            This can be done via widgetVar.reload().
        </h:panelGroup>

        <h:panelGroup layout="block" styleClass="centerExample">
        	<p:outputPanel id="example">
				<p:commandLink update="example"> 
					<f:setPropertyActionListener target="#{imageController.imageUrl}" value="/resources/images/testImage1.png" />
				 	<p:graphicImage value="/resources/images/testImage1.png" width="150" height="100"/>
				</p:commandLink>
				<p:commandLink update="example">  
					<f:setPropertyActionListener target="#{imageController.imageUrl}" value="/resources/images/testImage2.png" />
				 	<p:graphicImage value="/resources/images/testImage2.png" width="150" height="100"/>
				</p:commandLink>  	
				<p:commandLink update="example">
					<f:setPropertyActionListener target="#{imageController.imageUrl}" value="/resources/images/testImage3.png" />
				 	<p:graphicImage value="/resources/images/testImage3.png" width="150" height="100"/>
				</p:commandLink>
	
				<p:growl id="growl" showDetail="true" sticky="true" />
	
				<div id="imageWrapper" style="width:600px; height:400px; margin:auto; overflow:scroll; position:relative;">
					<p:graphicImage id="myImage" value="#{imageController.imageUrl}" />				
				</div>
	
				<pe:imageAreaSelect id="areaSelect"
					for="myImage"
					widgetVar="areaSelectWidget"
					autoHide="true"
					handles="false"
					movable="false"
					persistent="false"
					resizable="false"
					parentSelector="#imageWrapper">
					<p:ajax event="selectEnd" listener="#{imageController.selectEndListener}" update="growl"/>
				</pe:imageAreaSelect>
	
				<pe:imageRotateAndResize id="rotateAndResize" for="myImage" widgetVar="rotateAndResizeWidget">
					<p:ajax event="rotate" listener="#{imageController.rotateListener}" update="growl" oncomplete="areaSelectWidget.reload();"/>
					<p:ajax event="resize" listener="#{imageController.resizeListener}" update="growl" oncomplete="areaSelectWidget.reload();"/>
				</pe:imageRotateAndResize>

				<p:commandButton image="ui-icon ui-icon-arrowreturnthick-1-w" value="Rotate Left"
					onclick="rotateAndResizeWidget.rotateLeft(90);return false;"/>
				<p:commandButton image="ui-icon ui-icon-arrowreturnthick-1-e" value="Rotate Right"
					onclick="rotateAndResizeWidget.rotateRight(90);return false;"/>
				<p:commandButton image="ui-icon ui-icon-zoomin" value="Scale +"
					onclick="rotateAndResizeWidget.scale(1.05);return false;"/>
				<p:commandButton image="ui-icon ui-icon-zoomout" value="Scale -"
					onclick="rotateAndResizeWidget.scale(0.95);return false;"/>
			</p:outputPanel>
        </h:panelGroup>

        <ui:decorate template="/templates/twoTabsDecorator.html">
            <ui:define name="contentTab1">
	&lt;p:commandLink update="example"&gt; 
		&lt;f:setPropertyActionListener target="\#{imageController.imageUrl}" value="/resources/images/testImage1.png" /&gt;
	 	&lt;p:graphicImage value="/resources/images/testImage1.png" width="150" height="100"/&gt;
	&lt;/p:commandLink&gt;
	&lt;p:commandLink update="example"&gt;  
		&lt;f:setPropertyActionListener target="\#{imageController.imageUrl}" value="/resources/images/testImage2.png" /&gt;
	 	&lt;p:graphicImage value="/resources/images/testImage2.png" width="150" height="100"/&gt;
	&lt;/p:commandLink&gt;  	
	&lt;p:commandLink update="example"&gt;
		&lt;f:setPropertyActionListener target="\#{imageController.imageUrl}" value="/resources/images/testImage3.png" /&gt;
	 	&lt;p:graphicImage value="/resources/images/testImage3.png" width="150" height="100"/&gt;
	&lt;/p:commandLink&gt;

	&lt;p:growl id="growl" showDetail="true" sticky="true" /&gt;

	&lt;div id="imageWrapper" style="width:600px; height:400px; margin:auto; overflow:scroll; position:relative;"&gt;
		&lt;p:graphicImage id="myImage" value="\#{imageController.imageUrl}" /&gt;				
	&lt;/div&gt;

	&lt;pe:imageAreaSelect id="areaSelect"
		for="myImage"
		widgetVar="areaSelectWidget"
		autoHide="true"
		handles="false"
		movable="false"
		persistent="false"
		resizable="false"
		parentSelector="#imageWrapper"&gt;
		&lt;p:ajax event="selectEnd" listener="\#{imageController.selectEndListener}" update="growl"/&gt;
	&lt;/pe:imageAreaSelect&gt;

	&lt;pe:imageRotateAndResize id="rotateAndResize" for="myImage" widgetVar="rotateAndResizeWidget"&gt;
		&lt;p:ajax event="rotate" listener="\#{imageController.rotateListener}" update="growl" oncomplete="areaSelectWidget.reload();"/&gt;
		&lt;p:ajax event="resize" listener="\#{imageController.resizeListener}" update="growl" oncomplete="areaSelectWidget.reload();"/&gt;
	&lt;/pe:imageRotateAndResize&gt;

	&lt;p:commandButton image="ui-icon ui-icon-arrowreturnthick-1-w" value="Rotate Left"
		onclick="rotateAndResizeWidget.rotateLeft(90);return false;"/&gt;
	&lt;p:commandButton image="ui-icon ui-icon-arrowreturnthick-1-e" value="Rotate Right"
		onclick="rotateAndResizeWidget.rotateRight(90);return false;"/&gt;
	&lt;p:commandButton image="ui-icon ui-icon-zoomin" value="Scale +"
		onclick="rotateAndResizeWidget.scale(1.05);return false;"/&gt;
	&lt;p:commandButton image="ui-icon ui-icon-zoomout" value="Scale -"
		onclick="rotateAndResizeWidget.scale(0.95);return false;"/&gt;
&lt;/p:outputPanel&gt;
            </ui:define>
            <ui:define name="contentTab2">
@ManagedBean
@ViewScoped
public class ImageController implements Serializable {

	private static final long serialVersionUID = 20111020L;

	private String imageUrl;

	public ImageController() {
		imageUrl = "../resources/images/testImage1.png";
	}

	public void selectEndListener(final ImageAreaSelectEvent e) {
		FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_INFO, "Area selected",
				"X1: " + e.getX1() 
				+ ", X2: " + e.getX2() 
				+ ", Y1: " + e.getY1()
				+ ", Y2: " + e.getY2()
		        + ", Image width: " + e.getImgWidth() 
		        + ", Image height: " + e.getImgHeight());

		FacesContext.getCurrentInstance().addMessage(null, msg);
	}

	public void rotateListener(final RotateEvent e) {
		FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_INFO, "Image rotated",
				"Degree:" + e.getDegree());

		FacesContext.getCurrentInstance().addMessage(null, msg);
	}

	public void resizeListener(final ResizeEvent e) {
		FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_INFO, "Image resized",
				"Width:" + e.getWidth() + ", Height: " + e.getHeight());

		FacesContext.getCurrentInstance().addMessage(null, msg);
	}

	public String getImageUrl() {
		return imageUrl;
	}

	public void setImageUrl(String imageUrl) {
		this.imageUrl = imageUrl;
	}
}
            </ui:define>
        </ui:decorate>
    </ui:define>
    <ui:define name="useCases">
        <ui:include src="/sections/imageAreaSelect/useCasesChoice.xhtml"/>
    </ui:define>
    <ui:define name="docuTable">
        <ui:include src="/sections/shared/documentation.xhtml">
            <ui:param name="tagName" value="imageAreaSelect"/>
        </ui:include>
    </ui:define>
</ui:composition>
</html>
