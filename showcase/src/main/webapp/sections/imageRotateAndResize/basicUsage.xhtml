<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:pe="http://primefaces.org/ui/extensions">
<ui:composition template="/templates/showcaseLayout.xhtml">
    <ui:define name="centerContent">
        <f:facet name="header">
            <h:outputText value="ImageRotateAndResize"/>
        </f:facet>
        <h:panelGroup layout="block" styleClass="centerContent">
            The widget provides client side methods which can be called with Javascript. <br/>
            Following methods can be used: <br/>
            <ul>
	            <li>rotateLeft(degree) - Rotates the image to the left direction.</li>
	            <li>rotateRight(degree) - Rotates the image to the right direction.</li>
	            <li>resize(width,height) - Resizes the image to the given width and height.</li>
	            <li>scale(scaleFactor) - Scales the image with the given factor.</li>
	            <li>restoreDefaults() - Restores the default image.</li>
            </ul>
        </h:panelGroup>

        <h:panelGroup layout="block" styleClass="centerExample">
			<p:growl id="growl" showDetail="true" />

			<h:graphicImage id="myImage" value="/resources/images/testImage1.png" />
	
			<pe:imageRotateAndResize id="rotateAndResize" for="myImage" widgetVar="rotateAndResizeWidget">
				<p:ajax event="rotate" listener="#{imageController.rotateListener}" update="growl"/>
				<p:ajax event="resize" listener="#{imageController.resizeListener}" update="growl"/>
			</pe:imageRotateAndResize>

			<br/>

			<p:commandButton image="ui-icon ui-icon-arrowreturnthick-1-w" value="Rotate Left"
				onclick="rotateAndResizeWidget.rotateLeft(90);return false;"/>
			<p:commandButton image="ui-icon ui-icon-arrowreturnthick-1-e" value="Rotate Right"
				onclick="rotateAndResizeWidget.rotateRight(90);return false;"/>
			<p:commandButton image="ui-icon ui-icon-zoomin" value="Scale +"
				onclick="rotateAndResizeWidget.scale(1.05);return false;"/>
			<p:commandButton image="ui-icon ui-icon-zoomout" value="Scale -"
				onclick="rotateAndResizeWidget.scale(0.95);return false;"/>
        </h:panelGroup>

        <ui:decorate template="/templates/twoTabsDecorator.html">
            <ui:define name="contentTab1">
&lt;p:growl id="growl" showDetail="true" /&gt;

&lt;h:graphicImage id="myImage" value="/resources/images/testImage1.png" /&gt;

&lt;pe:imageRotateAndResize id="rotateAndResize" for="myImage" widgetVar="rotateAndResizeWidget"&gt;
	&lt;p:ajax event="rotate" listener="\#{imageController.rotateListener}" update="growl"/&gt;
	&lt;p:ajax event="resize" listener="\#{imageController.resizeListener}" update="growl"/&gt;
&lt;/pe:imageRotateAndResize&gt;

&lt;br/&gt;

&lt;p:commandButton image="ui-icon ui-icon-arrowreturnthick-1-w" value="Rotate Left"
	onclick="rotateAndResizeWidget.rotateLeft(90);return false;"/&gt;
&lt;p:commandButton image="ui-icon ui-icon-arrowreturnthick-1-e" value="Rotate Right"
	onclick="rotateAndResizeWidget.rotateRight(90);return false;"/&gt;
&lt;p:commandButton image="ui-icon ui-icon-zoomin" value="Scale +"
	onclick="rotateAndResizeWidget.scale(1.05);return false;"/&gt;
&lt;p:commandButton image="ui-icon ui-icon-zoomout" value="Scale -"
	onclick="rotateAndResizeWidget.scale(0.95);return false;"/&gt;
            </ui:define>
            <ui:define name="contentTab2">
@ManagedBean
@ViewScoped
public class ImageController implements Serializable {

	private static final long serialVersionUID = 20111020L;

	private String imageUrl;

	public ImageController() {
		imageUrl = "../resources/images/testImage1.png";
	}

	public void selectEndListener(final ImageAreaSelectEvent e) {
		FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_INFO, "Area selected",
				"X1: " + e.getX1() 
				+ ", X2: " + e.getX2() 
				+ ", Y1: " + e.getY1()
				+ ", Y2: " + e.getY2()
		        + ", Image width: " + e.getImgWidth() 
		        + ", Image height: " + e.getImgHeight());

		FacesContext.getCurrentInstance().addMessage(null, msg);
	}

	public void rotateListener(final RotateEvent e) {
		FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_INFO, "Image rotated",
				"Degree:" + e.getDegree());

		FacesContext.getCurrentInstance().addMessage(null, msg);
	}

	public void resizeListener(final ResizeEvent e) {
		FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_INFO, "Image resized",
				"Width:" + e.getWidth() + ", Height: " + e.getHeight());

		FacesContext.getCurrentInstance().addMessage(null, msg);
	}

	public String getImageUrl() {
		return imageUrl;
	}

	public void setImageUrl(String imageUrl) {
		this.imageUrl = imageUrl;
	}
}
            </ui:define>
        </ui:decorate>
    </ui:define>
    <ui:define name="useCases">
        <ui:include src="/sections/imageRotateAndResize/useCasesChoice.xhtml"/>
    </ui:define>
    <ui:define name="docuTable">
        <ui:include src="/sections/shared/documentation.xhtml">
            <ui:param name="tagName" value="imageRotateAndResize"/>
        </ui:include>
    </ui:define>
</ui:composition>
</html>
